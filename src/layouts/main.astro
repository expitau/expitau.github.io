---
import "./global.css";
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Nathan's portfolio and blog" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>expitau - {title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap"
			rel="stylesheet"
		/>
		<script>
			const blobElement = document.getElementById("blob");
			function updateBlob(x, y) {
				blobElement.animate(
					{
						left: `${x}px`,
						top: `${y}px`,
					},
					{ duration: 3000, fill: "forwards" },
				);
			}

			document.body.onpointermove = (event) => {
				const { clientX, clientY } = event;
				sessionStorage.setItem(
					"lastMousePosition",
					JSON.stringify({ x: clientX, y: clientY }),
				);
				updateBlob(clientX, clientY);
			};
			let { x, y } = JSON.parse(
				sessionStorage.getItem("lastMousePosition"),
			) || { x: 0, y: 0 };
			blobElement.style.left = `${x}px`;
			blobElement.style.top = `${y}px`;
		</script>

		<script
			defer
			data-domain="expitau.com"
			src="https://plausible.expitau.com/js/script.js"></script>
	</head>

	<body>
		<div id="background">
			<div id="blob"></div>
			<div id="blur"></div>
		</div>
		<main>
			<div style="display: flex; flex-direction: column; align-items: center;">
				<slot />
			</div>
		</main>
	</body>
</html>
<style is:global>
	:root {
		--background: #111111;
		--background-highlight: #141414;
		--background-highlight-2: #222222;
		--background-highlight-3: #202020;
		--text: #ffffff;
		--text-secondary: #d1d7e0;
		--transition-s: 0.1s;
		--link: #ffffff;
		--accent: #d8b4fe;
		--accent-background: #9333ea;
		color-scheme: dark;
	}
	html {
		font-family: "Inter", sans-serif;
		background: linear-gradient(
			to right,
			var(--background),
			var(--background-highlight) 50%,
			var(--background)
		);
	}

	body {
		margin: 0;
		height: 100vh;
		color: var(--text-secondary);
	}

	main {
		padding: 6rem 10%;
	}

	@media (max-width: 600px) {
		main {
			padding: 6rem 5%;
		}
	}

	@media (max-width: 400px) {
		main {
			padding: 6rem 5px;
		}
	}

	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

	.button {
		background: var(--background-highlight-2);
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		padding: 1rem 2rem;
		border-radius: 2rem;
		color: var(--text);
		text-decoration: none;
		font-weight: bold;
		transition: background 0.3s;
		outline: 1px solid #333
	}

	.button:hover {
		outline: 2px solid #666
	}

	.sr-only {
		border: 0;
		padding: 0;
		margin: 0;
		position: absolute !important;
		height: 1px;
		width: 1px;
		overflow: hidden;
		clip: rect(1px 1px 1px 1px);
		clip: rect(1px, 1px, 1px, 1px);
		clip-path: inset(50%);
		white-space: nowrap;
	}
</style>
<style>
	#background {
		width: 100vw;
		height: 100vh;
		position: fixed;
		top: 0;
		left: 0;
		overflow: hidden;
		pointer-events: none;
		z-index: -1;
	}
	#blob {
		position: absolute;
		height: 1000px;
		aspect-ratio: 1;
		left: 50%;
		top: 50%;
		translate: -50% -50%;
		border-radius: 50%;
		background: radial-gradient(
			ellipse 100% 140%,
			var(--background-highlight-3),
			transparent 30%
		);
		animation: rotate 10s linear infinite;
		z-index: 1;
	}
	#blur {
		height: 100%;
		width: 100%;
		position: absolute;
		z-index: 2;
	}

	@keyframes rotate {
		from {
			rotate: 0deg;
		}

		to {
			rotate: 360deg;
		}
	}
</style>
